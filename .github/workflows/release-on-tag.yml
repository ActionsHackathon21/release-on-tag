name: "Release on tag"

env:
  TELEGRAM_CHANNEL: '@mphamzzz_channel' # Configure the Telegram channel
  TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }} # Configure the Telegram bot token


on:
  push:
    tags:
      - "v*" # Configure the tag (v* for release tag, like v0.0.1) which you want to run this workflow

jobs:
  build-release:
    name: "Build & Release"
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [lts/*] # Configure nodejs version

    # Checkout source code
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      
    # Setup Nodejs      
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    # Setup yarn
    - name: Install yarn
      run: npm install -g yarn

    # Cache dependencies for faster build time in future
    - name: Cache dependencies
      uses: actions/cache@v2
      with:
        path: |
          ./node_modules
          ./.yarn
        key: ${{ runner.os }}-modules-${{ hashFiles('./yarn.lock') }}

    # Install dependencies for build process
    - name: Install build dependencies
      run: |
        yarn install --prefer-offline --pure-lockfile --cache-folder .yarn --modules-folder node_modules

    # Test 
    - name: Test 
      run: |
        yarn test

    # Build application into BUILD directory
    - name: Build application
      run: |
        yarn build
        mkdir BUILD
        cp -r public BUILD/public
        cp -r package.json BUILD/package.json
        cp -r yarn.lock BUILD/yarn.lock
        mv .next BUILD/.next

    # Prepare release files from BUILD directory
    - name: Prepare release files
      run: |
        cd BUILD && tar -zcf ../release-$GITHUB_REF_NAME.tar.gz . && cd .. && ls -la

    # Release files
    - name: Release
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        prerelease: false
        files: |
          release-${{ github.ref_name }}.tar.gz

    # Notify on Telegram channel
    - name: Telegram announcement
      run: |
        curl -G \
        --data-urlencode "chat_id=$TELEGRAM_CHANNEL" \
        --data-urlencode "text=Version $GITHUB_REF_NAME released! https://github.com/$GITHUB_REPOSITORY/releases/tag/$GITHUB_REF_NAME" \
        https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage
